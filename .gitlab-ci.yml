image: node:10.16.0

services:
  - postgres:latest

variables:
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: shuri_test
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: ''

stages:
  - build
  - connect
  - test
  - check_quality

cache:
  paths:
    - node_modules/

install_dependencies:
  stage: build
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/

connecting_db:
  stage: connect
  image: postgres
  script:
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"

run_tests:
  stage: test
  environment: test
  script:
    - npm test

code_quality:
  stage: check_quality
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SOURCE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
